h1. About

Very low-level AMQP 0.9.1 client which is supposed to be used for implementing more high-level AMQP libraries rather than to be used by the end users.

h2. The Overall AMQP Gems Architecture

<pre>
|--------------|      |-----------------------|      |-------------------|
| AMQ-Protocol |      | AMQ-Client            |      | AMQP gem & others |
|  - Encoding  | ===> |  - IO abstraction     | ===> |  - high-level API |
|  - Decoding  |      |  - Low-level AMQP API |      |  - opinionated    |
|  - Framing   |      |-----------------------|      |-------------------|
|--------------|
</pre>

So the most low-level part is the "AMQ-Protocol gem":http://github.com/ruby-amqp/amq-protocol. Its only job is to take care about encoding, decoding and framing. Reasons for having it as a standalone gem is that it'll be easy to replace the current implementation by a different one which can be a rewrite for another AMQP version or just an optimised version written in C.

The next piece in the puzzle is "AMQ-Client gem":http://github.com/ruby-amqp/amq-client which is supposed to take care about low-level API and IO abstraction, so it provides uniform interface all the IO read/write methods like @Socket#read/write@, @IO#select@ or EventMachine and adapters for them.

The important thing about AMQ-Client is that it shouldn't do any assumptions, it should just implement AMQP API in Ruby. The only exception is the AMQP @Basic@ class which is just a bunch of methods, so I put them to the class where it makes sense to have them, so the API seems more logical and significantly easier to use.

On top of the AMQ-Client there can a lot of various opinionated clients which can make usage of AMQP easier. Implementing of a good AMQP abstraction isn't easy, so creating another clients should be encouraged. Typical stuff which should be taken care about on this layer: reconnecting, behind-scene channel creation, simplified API, RPC ...

h1. Usage

Install by @gem install amq-client@.

<pre>
require "amq/client/adapters/socket"

AMQ::Client::Settings.register_io_adapter(AMQ::Client::SocketAdapter)
</pre>

h2. Nightly Builds

You can always find nightly builds at "gems.101ideas.cz":http://gems.101ideas.cz. You can install them thusly:

<pre>
wget http://gems.101ideas.cz/amq-client-nightly.gem
gem install amq-client-nightly.gem
</pre>

_*NOTE:* This could be better achieved by a gem server, but it's just utterly broken._

h2. Git Repository

<pre>
git clone git://github.com/ruby-amqp/amq-client.git
</pre>

h1. Links

* "RDoc.info API Docs":http://rdoc.info/github/ruby-amqp/amq-client/master/frames
* "Examples":https://github.com/ruby-amqp/amq-client/tree/master/examples/
* "Bug reporting":http://github.com/ruby-amqp/amq-client/issues
